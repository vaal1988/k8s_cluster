---
- name: check if kubernetes has already been initialized.
  stat:
    path: /etc/kubernetes/admin.conf
  register: kubernetes_init_stat

- name: kubeadm-config
  copy:
    content: |
      # kubeadm-config.yaml
      kind: ClusterConfiguration
      apiVersion: kubeadm.k8s.io/v1beta2
      kubernetesVersion: v1.21.0
      ---
      kind: KubeletConfiguration
      apiVersion: kubelet.config.k8s.io/v1beta1
      cgroupDriver: systemd
    dest: /root/kubeadm-config.yaml

- name: flush handlers
  meta: flush_handlers
  when: not kubernetes_init_stat.stat.exists

- name: initialize kubernetes master with kubeadm init
  shell: |
    kubeadm init --config /root/kubeadm-config.yaml
    mkdir -p /root/.kube
    cp -i /etc/kubernetes/admin.conf /root/.kube/config
    chown root. /root/.kube/config
    kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  register: kubeadmin_init
  when: not kubernetes_init_stat.stat.exists

# create token
- name: get join-command
  command: kubeadm token create --print-join-command
  register: kubernetes_join_command_result

# https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/
- set_fact:
    kubernetes_join_token: "{{ kubernetes_join_command_result.stdout | regex_search('[a-z0-9]{6}\\.[a-z0-9]{16}') }}"

- name: get cert_hash
  shell: "openssl x509 -in /etc/kubernetes/pki/ca.crt -pubkey -noout | openssl pkey -pubin -outform DER | openssl dgst -sha256 | awk '{print $2}'"
  changed_when: false
  register: kubernetes_cert

- set_fact:
    kubernetes_join_cert_hash: "{{ kubernetes_cert.stdout }}"

- debug:
    msg: "{{ kubernetes_join_token }}"

- debug:
    msg: "{{ kubernetes_join_cert_hash }}"




















# - name: add or update token value in key/value consul store
#   consul_kv:
#     key: kubernetes/token
#     value: "{{ token }}"

# - name: add or update cert_hash value in key/value consul store
#   consul_kv:
#     key: kubernetes/cert_hash
#     value: "{{ cert_hash.stdout }}"

# - name: allow pods on master
#   shell: kubectl taint node master-node node-role.kubernetes.io/master:NoSchedule-

# - name: sleep 30 && coredns rollout
#   shell: kubectl -n kube-system rollout restart deployment coredns